#!/bin/bash

BASHRUN_PREFIX=`which bashrun 2> /dev/null`
BASHRUN_PREFIX=${BASHRUN_PREFIX/\/bin\/bashrun/}
BASHRUN_SHARE="$BASHRUN_PREFIX/share/bashrun-engine"


if [[ $# -eq 0 ]]; then
    source $BASHRUN_SHARE/simple $1
    [[ $? -eq 0 ]] && exit 0
    
elif [[ $# -eq 1 ]]; then
    case $1 in
	show|--show|hide|--hide|toggle|--toggle)
	    source $BASHRUN_SHARE/simple $1
	    [[ $? -eq 0 ]] && exit 0
	    ;;
    esac
fi

source $BASHRUN_SHARE/frontend

parse_arguments "$@"

# handle switches first
case $switch in
    version)
	version && exit 0
	;;
    help)
	usage && exit 0
	;;    
    debug)
	BASHRUN_DEBUG=1
	;;
esac

response="$(§registry.request $choice "$state" $mode)"

#§display_message "Info" "request: $choice $state $mode\nresponse: $response"
#echo -e "request: $choice $state $mode ($command)\nresponse: $response"

if [[ "$response" == "none" ]]; then
    echo "bashrun: error: no $state $mode found."
    exit 1
fi

if [[ "$response" == "new" ]]; then    
    wids="$(new)"
else
    wids="$response"
fi

for wid in $wids; do
    §window.id "$wid"

    #echo -n "$wid ($BASHRUN_WINDOW_ID) -> $command (currently "
    #§window.mapped? || echo -n "un"
    #echo "mapped)"

    case "$command" in
	wid)
	    echo "$wid"
	    ;;
	show)
	    §window.map
	    ;;
	hide)
	    §window.unmap
	    ;;	
	toggle)
	    [[ "$response" != "new" ]] && §window.toggle
	    ;;
	*)
	    echo "bashrun: command '$command' unknown or not implemented"
	    exit 1
    esac
done
exit 0
