#!/bin/bash

function ping {
    echo "ping:shell $$" > $share/remote-command
    if kill -USR1 $pid; then
	waitpong
	if [[ "$pong" == "1" ]]; then
	    return 0
	fi
    fi
    return 1
}

function pong {
    pong=1
    echo -n "received pong -> "
}

function waitpong {
	local s=0
	until [[ "$pong" == "1" ]]; do
	    sleep 0.1
	    let s+=1
	    [[ s -eq 10 ]] && break;
	done
}

function send {
    echo "$action $command" > $share/remote-command
    kill -USR1 $pid
    return $?
}

trap pong SIGUSR1

action=$1
command=${@:2}

share=$HOME/.local/share/bashrun-engine
cache=$HOME/.cache/bashrun-engine

pong=0
pid=0
parent=0

if [[ -f $cache/pid ]]; then
  
    pid=$(cat $cache/pid)

    if [[ "$pid" != "" ]]; then
	    
	if [[ "$PPID" == "$pid" ]]; then
	    parent=1
	    echo "$pid is the parent shell of this process, run self in background..."
	    $0 $@ &
	    exit 0
	fi
			    
	echo -n "Sending ping $pid -> "

	if ping; then
	    echo "bashrun instance found."
	    echo -n "Sending '$action $command' -> $pid -> "
	    if send; then 
		echo "done."
		exit 0
	    else
		echo "fail"
		continue
	    fi
	else
	    echo "$pid: busy or not a bashrun instance."
	    exit 1
	fi
    fi
    echo "No bashrun instance available ($cache/pid is empty)."
else
    echo "No bashrun instance available."
fi
exit 1
