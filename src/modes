# -*- shell-script -*-

################################################################################

§class "§mode" "name comp unmap:b geom anim:b onmap onunmap feedback:b current" ''

################################################################################

§function.clone "§mode.new" "§_mode.new"

BASHRUN_MODE="${BASHRUN_MODE:-terminal}"

function §mode.new { 

    §_mode.new "$1"
    §mode.set_geom "80x24"
    §mode.set_current "1"
    §mode.set_comp 'complete'
    §mode.set_unmap '0'
    §mode.set_anim '0'
    §mode.set_onmap ""
    §mode.set_onunmap ""
    §mode.set_feedback "0"
}

function §mode.multigeom? {
    [[ "$(§mode.get_geom)" =~ \  ]]
    return $?
}

function §mode.get_default_geometry {

    if [[ "$(§mode.get_geom)" =~ ([^\ ]+)\ [^\ ]+ ]]; then
	echo "${BASH_REMATCH[1]}"
    else
	§mode.get_geom
    fi
}   

function §mode.unmap? {
    [[ "$(§mode.get_unmap)" == "1" && BASHRUN_DEBUG -eq 0 ]]
    return $?
}

function §mode.init {

    local name="$(§mode.get_name)"

    if §function.defined? "+mode-$name-init"; then
	§debug -v "+mode-$name-init"
	+mode-$name-init
    fi

    # apply animation
    if [[ "$(§mode.get_anim)" == "1" ]]; then
	§window.animate 1
    else
	§window.animate 0
    fi

    # init completion
    §completion.init
}

function §mode.reset {
    
    local name="$(§mode.get_name)"
    if [[ "$(type -t +mode-$name-leave)" == "function" ]]; then
	+mode-$name-leave
    fi
}

function §mode.code {

    local name="$(§mode.get_name)"
    local comp="$(§mode.get_comp)"
    local unmap="$(§mode.get_unmap)"
    local geom="$(§mode.get_geom)"
    local anim="$(§mode.get_anim)"
    local onmap="$(§mode.get_onmap)"
    local onunmap="$(§mode.get_onunmap)"
    local feedback="$(§mode.get_feedback)"

    §print_line "mode $name" "#" "80"
    echo

    echo "+mode '$name'"
    [[ "$geom" != '80x24' ]] && echo "  --geom  '$geom'"
    [[ "$comp" != 'complete' ]] && echo "  --comp  '$comp'"
    [[ "$unmap" != '0' ]] && echo "  --unmap '$unmap'"
    [[ "$anim" != '0' ]] && echo "  --anim  '$anim'"
    [[ "$onmap" != '' ]] && echo "  --onmap   '$onmap'"
    [[ "$onunmap" != '' ]] && echo "  --onunmap   '$onunmap'"
    [[ "$feedback" != '0' ]] && echo "  --feedback   '$feedback'"
    echo

    if §function.defined? "+mode-$name-init"; then
	§function.code "+mode-$name-init"
	echo
    fi
}

§function.clone "§modes.dump" "§_modes.dump"

function §modes.dump {

    local file="$_OBJECTS_DATA_HOME/${1:-§modes.dump}"
    local mode=''
    local func=''
    local current=$(§mode.get_name)

    §_modes.dump "${1:-§modes.dump}"

    §modes.seek_start
    while §modes.next?; do
	mode=$(§mode.get_name)

	func="+mode-$mode-init"
	if §function.defined? "$func"; then
	    §function.code "$func" >> $file
	fi
	§modes.next
    done
    §modes.seek $current
}
