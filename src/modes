# -*- shell-script -*-

################################################################################

§class "§mode" "name geometry completion unmap:b feedback:b animated:b 
                onmap onunmap cmdnfh logfile current" ""

################################################################################

§function.clone "§mode.new" "§_mode.new"

BASHRUN_MODE="${BASHRUN_MODE:-terminal}"

function §mode.new { 

    §_mode.new "$1"
    §mode.set_geometry "80x24"
    §mode.set_current "1"
    §mode.set_completion 'complete'
    §mode.set_unmap '0'
    §mode.set_animated '0'
    §mode.set_onmap ""
    §mode.set_onunmap ""
    §mode.set_feedback "0"
    §mode.set_logfile "/dev/null"
}

function §mode.multigeom? {
    [[ "$(§mode.get_geometry)" =~ \  ]]
    return $?
}

function §mode.get_default_geometry {

    if [[ "$(§mode.get_geometry)" =~ ([^\ ]+)\ [^\ ]+ ]]; then
	echo "${BASH_REMATCH[1]}"
    else
	§mode.get_geometry
    fi
}   

function §mode.unmap? {
    [[ "$(§mode.get_unmap)" == "1" && BASHRUN_DEBUG -eq 0 ]]
    return $?
}

function §mode.init {

    local name="$(§mode.get_name)"

    local onmap="$(§mode.get_onmap)"
    local onunmap="$(§mode.get_onunmap)"

    local onmap_file="$BASHRUN_CACHE_HOME/${name}-onmap"
    local onunmap_file="$BASHRUN_CACHE_HOME/${name}-onunmap"

    if §function.defined? "+mode-$name-init"; then
	§debug -v "+mode-$name-init"
	+mode-$name-init
    fi

    # apply animation
    if [[ "$(§mode.get_animated)" == "1" ]]; then
	§window.animate 1
    else
	§window.animate 0
    fi

    # write onmap/onunmap files
    if [[ -n "$onmap" ]]; then 
	echo "$onmap" > "$onmap_file"
    else
	[[ -f "$onmap_file" ]] && rm "$onmap_file" 
    fi

    if [[ -n "$onunmap" ]]; then 
	echo "$onunmap" > "$onunmap_file"
    else
	[[ -f "$onunmap_file" ]] && rm "$onunmap_file" 
    fi

    # init logfile
    BASHRUN_LOGFILE="$(§mode.get_logfile)"

    # init completion
    §completion.init

    # dump modeinfo for frontend
    §mode.write_info
}

function §mode.write_info {
    local mode="$(§mode.get_name)"
    local file="$BASHRUN_CACHE_HOME/${mode}-info"
    §terminals.seek "$mode"
    
    echo "pid=$$
          wid=$WINDOWID
          geometry=$(§mode.get_default_geometry)
          feedback=$(§mode.get_feedback)
          animated=$(§mode.get_animated)
	  terminal='$(§terminal.get_command)'" > $file
}

function §mode.reset {
    
    local name="$(§mode.get_name)"
    if [[ "$(type -t +mode-$name-leave)" == "function" ]]; then
	+mode-$name-leave
    fi
}

function §mode.code {

    local name="$(§mode.get_name)"
    local completion="$(§mode.get_completion)"
    local unmap="$(§mode.get_unmap)"
    local geometry="$(§mode.get_geometry)"
    local animated="$(§mode.get_animated)"
    local onmap="$(§mode.get_onmap)"
    local onunmap="$(§mode.get_onunmap)"
    local feedback="$(§mode.get_feedback)"
    local logfile="$(§mode.get_logfile)"

    §print_line "mode $name" "#" "80"
    echo

    echo "+mode '$name'"
    [[ "$geometry" != '80x24' ]] && echo "  --geometry '$geometry'"
    [[ "$completion" != 'complete' ]] && echo "  --completion '$completion'"
    [[ "$unmap" != '0' ]] && echo "  --unmap '$unmap'"
    [[ "$animated" != '0' ]] && echo "  --animated '$animated'"
    [[ "$onmap" != '' ]] && echo "  --onmap '$onmap'"
    [[ "$onunmap" != '' ]] && echo "  --onunmap '$onunmap'"
    [[ "$feedback" != '0' ]] && echo "  --feedback '$feedback'"
    [[ "$logfile" != '/dev/null' ]] && echo "  --logfile '$logfile'"
    echo

    if §function.defined? "+mode-$name-init"; then
	§function.code "+mode-$name-init"
	echo
    fi
}

§function.clone "§modes.dump" "§_modes.dump"

function §modes.dump {

    local file="$_OBJECTS_DATA_HOME/${1:-§modes.dump}"
    local mode=''
    local func=''
    local current=$(§mode.get_name)

    §_modes.dump "${1:-§modes.dump}"

    §modes.seek_start
    while §modes.next?; do
	mode=$(§mode.get_name)

	func="+mode-$mode-init"
	if §function.defined? "$func"; then
	    §function.code "$func" >> $file
	fi
	§modes.next
    done
    §modes.seek $current
}
