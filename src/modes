# -*- shell-script -*-

################################################################################

class "mode" "name comp unmap geom anim ps1 ps2 current" 'switch'

################################################################################

function_clone "mode.new" "_mode.new"

BASHRUN_MODE='none'

function mode.new { 

    _mode.new "$1"
    mode.set_geom "80x24"
    mode.set_current "1"
    mode.set_comp 'complete'
    mode.set_unmap '0'
    mode.set_anim '0'
    mode.set_ps1 "$PS1"
    mode.set_ps2 "$PS2"
}

function mode.multigeom? {
    [[ "$(mode.get_geom)" =~ \  ]]
    return $?
}

function mode.unmap? {
    [[ "$(mode.get_unmap)" == "1" ]]
    return $?
}

function mode.switch {

    local current="$(mode.get_name)"
    local previous="$BASHRUN_MODE"
    
    bashrun.debug "switching from" -v "$previous" "to" -v "$current"

    if [[ "$previous" != '' ]]; then
	if function? "mode-$previous-leave"; then
	    mode-$previous-leave
	fi
    fi

    if function?  "mode-$current-enter"; then
	mode-$current-enter
    fi

    # apply geometry
    bashrun.window.geometry "$(echo "$(mode.get_geom)" | cut -d ' ' -f 1)" 
    
    # enable animation
    if [[ "$(mode.get_anim)" == "1" ]]; then
	bashrun.window.animate 1
    else
	bashrun.window.animate 0
    fi
    tput cr; tput dl1

    PS1="$(mode.get_ps1)"
    PS2="$(mode.get_ps2)"

    BASHRUN_MODE="$current"
    bashrun.registry.set_mode "$previous" "$current"

    xdotool windowproperty $BASHRUN_WINDOW_ID \
	--name "bashrun-$current" \
	--class "bashrun-$current"
}

function mode.reset {
    
    local name="$(mode.get_name)"
    if [[ "$(type -t mode-$name-leave)" == "function" ]]; then
	mode-$name-leave
    fi
}

function mode.code {

    local name="$(mode.get_name)"
    local comp="$(mode.get_comp)"
    local unmap="$(mode.get_unmap)"
    local geom="$(mode.get_geom)"
    local anim="$(mode.get_anim)"
    local ps1="$(mode.get_ps1)"
    local ps2="$(mode.get_ps2)"

    print_line "mode $name" "#" "80"
    echo

    echo "+mode --new $name"
    [[ "$comp" != 'complete' ]] && echo "--comp '$comp'"
    [[ "$unmap" != '0' ]] && echo "--unmap '$unmap'"
    [[ "$geom" != '80x24' ]] && echo "--geom '$geom'"
    [[ "$anim" != '0' ]] && echo "--anim '$anim'"
    [[ "$ps1" != '' ]] && echo "--ps1 '$ps1'"
    [[ "$ps2" != '' ]] && echo "--ps2 '$ps2'"
    echo

    if function? "mode-$name-enter"; then
	function_code "mode-$name-enter"
	echo
    fi

    if function? "mode-$name-leave"; then
	function_code "mode-$name-leave"
	echo
    fi      
}

function_clone "modes.dump" "_modes.dump"

function modes.dump {

    local file=$_OBJECTS_DATA_HOME/modes.dump
    local mode=''
    local func=''
    local current=$(mode.get_name)

    _modes.dump

    modes.seek_start
    while modes.next?; do
	mode=$(mode.get_name)

	func="mode-$mode-enter"
	if function? "$func"; then
	    function_code "$func" >> $file
	fi

	func="mode-$mode-leave"
	if function? "$func"; then
	    function_code "$func" >> $file
	fi
	modes.next
    done
    modes.seek $current
}
