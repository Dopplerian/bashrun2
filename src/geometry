# -*- shell-script -*-

declare bashrun_geometry_width=0 bashrun_geometry_height=0 \
    bashrun_geometry_xoff=0 bashrun_geometry_yoff=0 \
    bashrun_geometry_has_size=0 bashrun_geometry_has_position=0 \

[[ "$(xdpyinfo | grep dimensions:)" =~ ([0-9]+)x([0-9]+) ]]

bashrun_display_width=${BASH_REMATCH[1]}
bashrun_display_height=${BASH_REMATCH[2]}

function §geometry {

    §geometry.size? && \
	echo -n "${bashrun_geometry_width}x${bashrun_geometry_height}"

    §geometry.position? && \
	echo -n "${bashrun_geometry_xoff}${bashrun_geometry_yoff}"

    [[ §geometry.size? || §geometry.position? ]] && echo
}

function §geometry.parse {

    bashrun_geometry_has_size=0
    bashrun_geometry_has_position=0

    if [[ "$1" =~ ^(([0-9]+)x([0-9]+))?(([+-][0-9]+)([+-][0-9]+))?$ ]]; then

	if [[ "${BASH_REMATCH[1]}" != '' ]]; then
	    
	    if echo "${BASH_REMATCH[1]}" | grep x &> /dev/null; then
		bashrun_geometry_has_size=1
		bashrun_geometry_width=${BASH_REMATCH[2]}
		bashrun_geometry_height=${BASH_REMATCH[3]}
	    else
		bashrun_geometry_has_position=1
		bashrun_geometry_xoff=${BASH_REMATCH[5]}
		bashrun_geometry_yoff=${BASH_REMATCH[6]}
	    fi
	else
	    bashrun_geometry_has_size=0
	    bashrun_geometry_has_position=0
	fi

	if [[ "${BASH_REMATCH[4]}" != '' ]]; then
	    bashrun_geometry_has_position=1
	    bashrun_geometry_xoff=${BASH_REMATCH[5]}
	    bashrun_geometry_yoff=${BASH_REMATCH[6]}
	fi

    else
	echo "error: format: [<width>x<height>][[+-]<xoffset>[+-]<yoffset>]"
	return 1
    fi
    return 0
}

function §geometry.size? {
    [[ bashrun_geometry_has_size -eq 1 ]]
    return $?
}

function §geometry.position? {
    [[ bashrun_geometry_has_position -eq 1 ]]
    return $?
}

function §geometry.width { 
    if [[ $# -eq 0 ]]; then
	if §geometry.size?; then
	    echo $bashrun_geometry_width
	fi
    else
	bashrun_geometry_width="$1"
	bashrun_geometry_has_size=1
    fi
}

function §geometry.height {
    if [[ $# -eq 0 ]]; then
	if §geometry.size?; then
	    echo $bashrun_geometry_height
	fi
    else
	bashrun_geometry_height="$1"
	bashrun_geometry_has_size=1
    fi
}

function §geometry.x {
    §geometry.calc_point $bashrun_geometry_xoff $bashrun_display_width $1
}

function §geometry.y {
    §geometry.calc_point $bashrun_geometry_yoff $bashrun_display_height $1
}

function §geometry.calc_point {

    local spec=$1
    local display=$2
    local size=$3

    if [[ "$spec" =~ ^(\+|-) ]]; then
	
	local sign=${BASH_REMATCH[1]}
	local value=${spec/$sign/}
	
	if [[ "$sign" == "+" ]]; then
	    echo $value
	    
	elif [[ "$sign" == "-" ]]; then
	    echo "$(( display - value - size ))"
	fi	
    fi
}

