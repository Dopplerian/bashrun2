# -*- shell-script -*-

################################################################################

_OBJ_CURRENT_TYPE=''

function object {

    local name=$1
    local keys=$2
    local methods="nil"
    local have_interface=0
    
    if [[ "$#" == "3" ]]; then 
	methods=${3}
    fi

    if [[ "$methods" != 'nil' ]]; then
	local interface=(new code $keys $methods)
	have_interface=1
        # prepare interface (prefix with --)

	local i=0
	for ((i=0; i<${#interface[@]}; i++)); do
	    interface[$i]="--${interface[$i]}"
	done
	interface="${interface[@]}"
    fi

    local tmpfile=/tmp/$name.bash

    if [[ -f $tmpfile ]]; then
	source $tmpfile
	return 0
    fi

    local NAME=$(echo $name | tr "[:lower:]" "[:upper:]")

    cat objects | \
	sed "s|_OBJECTS_KEYS=()|_OBJECTS_KEYS=($keys)|" | \
	sed "s|_OBJECTS_INTERFACE_OPTIONS=''|_OBJECTS_INTERFACE_OPTIONS='$interface' |" | \
	sed "s|_OBJECTS_HAVE_INTERFACE=0|_OBJECTS_HAVE_INTERFACE=$have_interface|" | \
	sed "s|_OBJECTS_INTERFACE_METHODS=''|_OBJECTS_INTERFACE_METHODS='$methods'|" | \
	sed "s|object|$name|g;s|OBJECT|$NAME|g" \
	> $tmpfile

    local i=0
    local key
    for key in $keys; do
	object_create_reader $name $NAME $key $i
	object_create_reader $name $NAME $key $i 1
	object_create_writer $name $NAME $key $i
	let i++
    done
    
    source $tmpfile

    return 0
}

function object_type {
    
    local type=$1
    if [[ "$type" == '' ]]; then
	echo "$_OBJ_CURRENT_TYPE"
    else
	_OBJ_CURRENT_TYPE="$type"
    fi
}

function object_create_reader {
    local name=$1
    local NAME=$2
    local key=$3
    local field=$4
    local sugar=${5:0}
    local tmpfile=/tmp/$name.bash

    local method_name
    if [[ sugar -eq 1 ]]; then
	method_name="${name}_${key}"
    else
	method_name="${name}_get_${key}"
    fi
    echo $(cat <<EOF

function ${method_name} {
    echo "\${_${NAME}S[\$_${NAME}S_POSITION+$field]}";
}
EOF
    ) >> $tmpfile
}

function object_create_writer {
    local name=$1
    local NAME=$2
    local key=$3
    local field=$4
    local tmpfile=/tmp/$name.bash

    echo $(cat <<EOF

function ${name}_set_${key} {
    _${NAME}S[\$_${NAME}S_POSITION+$field]=\$1;
    _${NAME}S_MODIFIED=1;
}
EOF
    ) >> $tmpfile
}

function defined? {
    [[ "${!1-X}" == "${!1-Y}" ]]
}

