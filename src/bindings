# -*- shell-script -*-

################################################################################

class "binding" "keyseq keymap action is_bound readline"  
class "internal" "action keymap char readline"                
class "keyname" "keyseq name"                             

keyname.new '\x7f' 'C-<bsp>'

bind "'\C-z\x01': accept-line"                    # accept-line

BASHRUN_BINDINGS_NEXT_CHAR=2                      # next char to bind

################################################################################

function binding.bound? {
    [[ "$(binding.get_is_bound)" == '1' ]] && return 0
    [[ "$(binding.get_is_bound)" == '0' ]] && return 1
}

function binding.code {
    
    local keyseq=$(binding.get_keyseq)
    local keymap=$(binding.get_keymap)
    local action=$(binding.get_action)

    local args="'$keyseq'"
    [[ "$keymap" != 'emacs' ]] && args="$args '$keymap'"
    
    echo "--bind $args"
}

function_clone "bindings.dump" "_bindings.dump"

function bindings.dump {

    _bindings.dump

    local file=$_OBJECTS_DATA_HOME/bindings.dump

    bindings.seek_start
    while bindings.next?; do
	echo "bind $(binding.get_readline)" >> $file
	bindings.next
    done    
}

function_clone "internals.dump" "_internals.dump"

function internals.dump {

    _internals.dump

    local file=$_OBJECTS_DATA_HOME/internals.dump

    internals.seek_start
    while internals.next?; do
	echo "bind $(internal.get_readline)" >> $file
	internals.next
    done    
}


################################################################################
