# -*- shell-script -*-

################################################################################

bashrun_remote=$bashrun_data_home/$BASHRUN_MODE-remote

################################################################################

function §remote.run {

    local words
    local action
    local input
    local command
    local stty

    if [[ -f $bashrun_remote ]]; then
	
	words=($(<$bashrun_remote))
	action=${words[0]}	
	input=0

	# everything else goes into command
	command=${words[@]:1}

	§debug "$action" "$input" "$command"

	§actions.seek "$action"	

	if §action.depends_on? "su"; then 	    
	    # save the current tty settings
	    stty="$(stty -g)"
	    
	    # prepare tty for su password entry
	    stty echo cooked -cbreak	    
	fi

	§engine.action "$action" "$input" "$command"	

	if §action.depends_on? "su"; then 	    
	    # reset tty settings
	    stty "$stty"
	fi

	# since readline didn't get an accept-line,
	# we need to force a redisplay of the prompt
	kill -WINCH $$

	# remove command file
	rm $bashrun_remote

    else
	§debug warn "no command pending in" -v "$bashrun_remote"
	return 1
    fi
}

