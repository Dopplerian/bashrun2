# -*- shell-script -*-

################################################################################

function bashrun.registry.add {
    
    # add window id to widfile
    if [[ ! -f $BASHRUN_REGISTRY ]]; then
	touch $BASHRUN_REGISTRY
    fi
    local entry="$WINDOWID:$$:$BASHRUN_MODE"
    bashrun.debug "entry" -v "$entry" '>>' -v "${BASHRUN_REGISTRY/$HOME/~}"
    echo "$entry" >> $BASHRUN_REGISTRY
}

function bashrun.registry.length {
    if [[ -f $BASHRUN_REGISTRY ]]; then
	cat $BASHRUN_REGISTRY | wc -l 
    else
	echo 0
    fi
}

function bashrun.registry.remove {

    local wid="${1:-$WINDOWID}"
    local info=''

    echo -n '' > $BASHRUN_REGISTRY.tmp

    for info in $(<$BASHRUN_REGISTRY); do
	if [[ ! "$info" =~ "$wid" ]]; then
	    echo $info >> $BASHRUN_REGISTRY.tmp
	fi
    done
    mv $BASHRUN_REGISTRY.tmp $BASHRUN_REGISTRY
    if [[ "$(<$BASHRUN_REGISTRY)" == '' ]]; then
	rm $BASHRUN_REGISTRY
    fi
}

function bashrun.registry.find {
    
    # find the latest existing idle instance in the requested mode

    local mode="${1:-any}"
    local info="" wid="" pid=""

    if [[ ! -f $BASHRUN_REGISTRY ]]; then
	echo "none"
	return 1
    fi

    for info in $(tac $BASHRUN_REGISTRY); do
	if [[ "$info" =~ $mode || "$mode" == "any" ]]; then
	    [[ "$info" =~ (.+?):(.+?):(.+) ]];
	    wid=${BASH_REMATCH[1]}	    
	    pid=${BASH_REMATCH[2]}
	    if bashrun.instance.exists? $wid; then
		if bashrun.instance.idle? $pid; then
		    echo "$wid"
		    return 0
		fi
	    else
		# this is a stale entry
		bashrun.registry.remove "$wid"
	    fi
	fi
    done 
    echo "none"
    return 1
}

function bashrun.registry.get_last_wid {
    if [[ -f $BASHRUN_REGISTRY ]]; then
	tac $BASHRUN_REGISTRY | head -n1 | cut -d: -f1
    else
	echo "none"
    fi
}

function bashrun.registry.set_mode {
    
    local prev="$1"
    local mode="$2"

    local info=''
    echo -n '' > $BASHRUN_REGISTRY.tmp

    for info in $(<$BASHRUN_REGISTRY); do
	if [[ ! "$info" =~ "$WINDOWID" ]]; then
	    echo $info >> $BASHRUN_REGISTRY.tmp
	else
	    echo ${info/$prev/$mode} >> $BASHRUN_REGISTRY.tmp
	fi
    done
    mv $BASHRUN_REGISTRY.tmp $BASHRUN_REGISTRY
}

function bashrun.registry.get_mode {
    
    local wid="$1"
    local info=""

    for info in $(<$BASHRUN_REGISTRY); do
	if [[ "$info" =~ "$wid" ]]; then
	    echo "$info" | cut -d ':' -f 3
	    return 0
	fi
    done
    echo "none"
    return 1
}

function bashrun.registry.get_pid {

    local wid="$1"
    local info=""

    for info in $(<$BASHRUN_REGISTRY); do
	if [[ "$info" =~ "$wid" ]]; then
	    echo $info | cut -d ':' -f 2
	    return 0
	fi
    done
    return 1 
}
