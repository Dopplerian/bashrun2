# -*- shell-script -*-

################################################################################

§class "template" --with-interface \
    --properties "name" \
                 "title=-title %t" \
                 "classname=-name %n" \
                 "geometry=-g %g" \
                 "font=-fn %f" \
                 "boldfont=-fb %b" \
                 "foreground=-fg %F" \
                 "background=-bg %B" \
                 "bashrun=-e %*" \
                 "bashrun_options=+sb" \
                 "execute=-e bash -c %@"		 

################################################################################

function §template.create_commandline {

    local type="$1"
    local title="$2"
    local classname="$3"    
    local geometry="$4"
    local font="$5"
    local boldfont="$6"
    local foreground="$7"
    local background="$8"
    local options="$9"

    local template="$(§template.get_name) "

    if [[ -n "$title" ]]; then
	template+="$(§template.get_title) "
    fi
    
    if [[ -n "$classname" ]]; then
	template+="$(§template.get_classname) "
    fi
    
    if [[ -n "$geometry" ]]; then
	template+="$(§template.get_geometry) "
    fi
    
    if [[ -n "$font" ]]; then
	template+="$(§template.get_font) "
    fi

    if [[ -n "$boldfont" ]]; then
	template+="$(§template.get_boldfont) "
    fi

    if [[ -n "$foreground" ]]; then
	template+="$(§template.get_foreground) "
    fi

    if [[ -n "$background" ]]; then
	template+="$(§template.get_background) "
    fi
    
    if [[ -n "$options" ]]; then
	template+="%o ";
    fi

    if [[ "$type" == "bashrun" ]]; then
	template+="$(§template.get_bashrun_options) "
	template+="$(§template.get_bashrun)"
    else
	template+="$(§template.get_execute)"
    fi
    printf '%s' "$template"
}
