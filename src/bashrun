#!/bin/bash

# determine the install location
BASHRUN_PREFIX=`which bashrun 2> /dev/null`
BASHRUN_PREFIX=${BASHRUN_PREFIX/\/bin\/bashrun/}

# setup bashrun directories
BASHRUN_SHARE="$BASHRUN_PREFIX/share/bashrun"
BASHRUN_CACHE_HOME="$HOME/.cache/bashrun"
BASHRUN_DATA_HOME="$HOME/.local/share/bashrun"

# load frontend functions
source $BASHRUN_SHARE/frontend

# default mode and command
mode="launcher"
command="show"

# handle --version, --help and --mode options first
if [[ $# -gt 0 ]]; then
    case "$1" in
	-v|--version)
 	    version && exit 0
 	    ;;
	-h|--help)
 	    usage && exit 0
 	    ;;    
	-m|--mode)
 	    mode=${2:-launcher}
 	    shift; shift
 	    ;;
    esac
fi

# get info about the requested mode
MODEINFO="$BASHRUN_CACHE_HOME/${mode}-info"
if [[ ! -f $MODEINFO ]]; then
    modeinfo
fi
source $MODEINFO

# get command 
if [[ $# -gt 0 ]]; then
    command="$1"
    command=${command/--/}
    shift
fi

# launch a new instance if necessary
launched=0
if [[ ! "$(xprop -id $wid WM_CLASS 2>/dev/null)" =~ bashrun-$mode ]]; then
    if [[ "$command" =~ (exit|quit) ]]; then
	exit 0
    else
	launch
	launched=1
    fi
fi

# prepare §window class if necessary
[[ launched -eq 0 ]] && source_window

case "$command" in
    show)
	§window.map fast &>/dev/null
	;;
    hide)
	§window.unmap fast &>/dev/null
	;;	
    toggle)
	[[ launched -eq 0 ]] && §window.toggle fast &>/dev/null
	;;
    smart)
	[[ launched -eq 0 ]] && §window.toggle_smart fast 1 &>/dev/null
	;;
    wid)
	echo $wid
	;;
    pid)
	echo $pid
	;;
    exit|quit)
	kill $pid
	;;
    restart)
	if [[ launched -eq 0 ]]; then
	    kill $pid
	    sleep 1
	    exec bashrun -m $mode	
	fi
	;;
    su|--su)
	remote su-run $@
	;;
    do)
	remote $@
	;;
    wait)
	state=${1:-unmap}
	case "$state" in
	    ready)
		wait_until "[[ -f $BASHRUN_CACHE_HOME/${mode}-ready ]]"
		;;
	    map|unmap)
		§window.wait $state
		;;	    
	esac
	;;
    *)
	echo "bashrun: unknown command: $command"
	exit 1
esac 
exit 0
