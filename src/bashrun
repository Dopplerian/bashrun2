#!/bin/bash

# determine the install location
BASHRUN_PREFIX=`which bashrun 2> /dev/null`
BASHRUN_PREFIX=${BASHRUN_PREFIX/\/bin\/bashrun/}
BASHRUN_SHARE="$BASHRUN_PREFIX/share/bashrun"

# default mode and command (show the launcher) 
mode="launcher"
command="show"

# Fast handling of the simple (and probably most common) use cases,
# as in 'bashrun [--mode <mode>] [show|hide|toggle|smart]'

if [[ $# -eq 3 || $# -eq 2 ]]; then
    if [[ "$*" =~ ^(\-\-mode|-m)\ ([^\ ]+) ]]; then
	mode=${BASH_REMATCH[2]}
	shift; shift
    fi
fi

if [[ $# -eq 1 ]]; then
    case $1 in
	show|--show|hide|--hide|toggle|--toggle|smart|--smart|wid|--wid)
	    command=$1
	    shift
	    ;;
    esac    
fi

if [[ $# -eq 0 ]]; then
    source $BASHRUN_SHARE/simple
    [[ $? -eq 0 ]] && exit 0
fi

# The above cases didn't apply or no instance was found in the specified mode...

source $BASHRUN_SHARE/utils

# handle options first
case "$1" in
    -v|--version)
	version && exit 0
	;;
    -h|--help)
	usage && exit 0
	;;    
    -m|--mode)
	mode=${2:-launcher}
	shift; shift
	;;
esac

echo "frontend: remaining args: $*"

source $BASHRUN_SHARE/frontend

response="$(§registry.request $mode)"

if [[ "$response" == "new" ]]; then    
    wid="$(launch)"
else
    wid="$response"
fi

§window.id "$wid"

[[ $# -gt 0 ]] && command="$1"

case "$command" in
    wid)
	echo "$wid"
	;;
    pid)
	echo "$pid"
	;;
    show)
	§window.map
	;;
    hide)
	§window.unmap
	;;	
    toggle)
	[[ "$response" != "new" ]] && §window.toggle
	;;
    *)
	echo "bashrun: command '$command' unknown or not implemented"
	exit 1
esac
exit 0
